{
  "openapi": "3.1.0",
  "info": {
    "title": "ExpertFY API",
    "version": "1.0.1",
    "description": "ExpertFY API Documentation"
  },
  "basePath": "/",
  "paths": {
    "/person": {
      "post": {
        "tags": [
          "Person"
        ],
        "summary": "Create a new person",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Person created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Person"],
        "summary": "List all persons",
        "responses": {
          "200": {
            "description": "Persons found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/person/{id}": {
      "put": {
        "tags": ["Person"],
        "summary": "Update a person",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Person id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Person updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["Person"],
        "summary": "Delete a person",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Person id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Person deleted successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Person"],
        "summary": "Get a person",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Person id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Person found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/person/accountInfo/{id}": {
      "get": {
        "tags": ["Person"],
        "summary": "Get person account info",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Person id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Person account info found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpertList"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/area":{
      "get": {
        "tags": ["Area"],
        "summary": "Get all areas",
        "responses": {
          "200": {
            "description": "Areas found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/simpleList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/language":{
      "get": {
        "tags": ["Language"],
        "summary": "Get all languages",
        "responses": {
          "200": {
            "description": "Languages found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/simpleList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/seniority":{
      "get": {
        "tags": ["Seniority"],
        "summary": "Get all seniorities",
        "responses": {
          "200": {
            "description": "Seniorities found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/simpleList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/attitude":{
      "get": {
        "tags": ["Attitude"],
        "summary": "Get all attitudes",
        "responses": {
          "200": {
            "description": "Attitudes found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Attitude"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": ["Attitude"],
        "summary": "Create a new attitude",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attitude"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Attitude created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/attitude/{id}": {
      "get": {
        "tags": ["Attitude"],
        "summary": "Get an attitude",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Attitude id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attitude found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attitude"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": ["Attitude"],
        "summary": "Update an attitude",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Attitude id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attitude"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Attitude updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["Attitude"],
        "summary": "Delete an attitude",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Attitude id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attitude deleted successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/attitudeEndors": {
      "get": {
        "tags": ["AttitudeEndors"],
        "summary": "Get all attitudeEndors",
        "responses": {
          "200": {
            "description": "AttitudeEndors found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttitudeEndors"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": ["AttitudeEndors"],
        "summary": "Create a new attitudeEndors",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttitudeEndors"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AttitudeEndors created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/attitudeEndors/{id}": {
      "get": {
        "tags": ["AttitudeEndors"],
        "summary": "Get an attitudeEndors",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "AttitudeEndors id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AttitudeEndors found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttitudeEndors"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": ["AttitudeEndors"],
        "summary": "Update an attitudeEndors",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "AttitudeEndors id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttitudeEndors"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AttitudeEndors updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["AttitudeEndors"],
        "summary": "Delete an attitudeEndors",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "AttitudeEndors id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AttitudeEndors deleted successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/skill": {
      "get": {
        "tags": ["Skill"],
        "summary": "Get all skills",
        "responses": {
          "200": {
            "description": "Skills found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Skill"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": ["Skill"],
        "summary": "Create a new skill",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Skill"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Skill created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/skill/{id}":{
      "get": {
        "tags": ["Skill"],
        "summary": "Get a skill",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Skill id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Skill found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": ["Skill"],
        "summary": "Update a skill",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Skill id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Skill"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Skill updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["Skill"],
        "summary": "Delete a skill",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Skill id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Skill deleted successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/skillEndors":{
      "get": {
        "tags": ["SkillEndors"],
        "summary": "Get all skillEndors",
        "responses": {
          "200": {
            "description": "SkillEndors found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillEndors"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": ["SkillEndors"],
        "summary": "Create a new skillEndors",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkillEndors"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SkillEndors created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/skillEndors/{id}":{
      "get": {
        "tags": ["SkillEndors"],
        "summary": "Get a skillEndors",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "SkillEndors id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SkillEndors found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillEndors"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": ["SkillEndors"],
        "summary": "Update a skillEndors",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "SkillEndors id",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "tags": ["SkillEndors"],
        "summary": "Delete a skillEndors",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "SkillEndors id",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "email": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "linkedin": {
            "type": "string"
          },
          "team": {
            "type": "string"
          },
          "employmentStartDate": {
            "type": "string",
            "format": "date"
          },
          "office": {
            "type": "string"
          },
          "seniorityId": {
            "type": "number"
          },
          "areaId": {
            "type": "number"
          }
        }
      },
      "simpleList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Attitude": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "attitudeType": {
            "type": "string"
          }
        }
      },
      "AttitudeEndorsement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "attitudeId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Skill": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "skillType": {
            "type": "string"
          }
        }
      },
      "SkillEndorsement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "personId": {
            "type": "string"
          },
          "skillId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      }
    }
  }
}