{
  "openapi": "3.1.0",
  "info": {
    "title": "ExpertFY API",
    "version": "1.0.0",
    "description": "ExpertFY API Documentation"
  },
  "basePath": "/",
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["User"],
        "summary": "List all users",
        "responses": {
          "200": {
            "description": "Users found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/{id}": {
      "put": {
        "tags": ["User"],
        "summary": "Update a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "User id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/competence":{
      "post": {
        "tags": [
          "Competence"
        ],
        "summary": "Create a new competence",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Competence"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Competence created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Competence"],
        "summary": "List all competences",
        "responses": {
          "200": {
            "description": "Competences found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Competence"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/competence/{id}":{
      "put": {
        "tags": ["Competence"],
        "summary": "Update a competence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Competence id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Competence"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Competence updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["Competence"],
        "summary": "Delete a competence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Competence id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Competence deleted successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/competence/findbyname/{name}":{
      "get": {
        "tags": ["Competence"],
        "summary": "Find a competence by name",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Competence name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Competences found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Competence"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/manifest":{
      "post": {
        "tags": [
          "manifestCompetence"
        ],
        "summary": "Create a new manifestCompetence",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/manifestCompetence"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "manifestCompetence created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["manifestCompetence"],
        "summary": "Get all manifestCompetences",
        "responses": {
          "200": {
            "description": "manifestCompetences found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/manifestCompetence"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/manifest/{id}":{
      "put": {
        "tags": ["manifestCompetence"],
        "summary": "Update a manifestCompetence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "manifestCompetence id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/manifestCompetence"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "manifestCompetence updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["manifestCompetence"],
        "summary": "Delete a manifestCompetence",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "manifestCompetence id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "manifestCompetence deleted successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "login": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "role": {
            "type": "string"
          },
          "seniority": {
            "type": "string"
          },
          "employmentStartDate": {
            "type": "string",
            "format": "date"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "linkedin": {
            "type": "string"
          }
        }
      },
      "Competence": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "manifestCompetence": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          },
          "competenceId": {
            "type": "number"
          }
        }
      }
    }
  }
}